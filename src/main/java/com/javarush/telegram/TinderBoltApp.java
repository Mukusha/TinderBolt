package com.javarush.telegram;

import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.objects.*;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;

public class TinderBoltApp extends MultiSessionTelegramBot {
    static Properties property = new Properties();

    static {

        FileInputStream fis;
        try {
            fis = new FileInputStream("src/main/resources/config.properties");
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }
        try {
            property.load(fis);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    // –≤ config.properties –ø—Ä–æ–ø–∏—Å–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    public static final String TELEGRAM_BOT_NAME = property.getProperty("bot.name");
    public static final String TELEGRAM_BOT_TOKEN = property.getProperty("bot.token");
    public static final String OPEN_AI_TOKEN = property.getProperty("OPEN_AI_TOKEN");

    private DialogMode currentMode = null;
    private UserInfo me;
    private UserInfo she;
    private int questionCount;
    private final ArrayList<String> list = new ArrayList<>();
    private final ChatGPTService chatGPT = new ChatGPTService(OPEN_AI_TOKEN);

    public TinderBoltApp() {
        super(TELEGRAM_BOT_NAME, TELEGRAM_BOT_TOKEN);
    }

    @Override
    public void onUpdateEventReceived(Update update) {
        String message = getMessageText();

        if (message.equals("/start")) {
            currentMode = DialogMode.MAIN;
            sendPhotoMessage("main");
            String text = loadMessage("main");
            sendTextMessage(text);

            showMainMenu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞", "/start",
                    "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è \uD83D\uDE0E", "/profile",
                    "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ \uD83E\uDD70", "/opener",
                    "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ \uD83D\uDE08", "/message",
                    "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ \uD83D\uDD25", "/date",
                    "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT \uD83E\uDDE0", "/gpt");
            return;
        }

        // GPT
        if (message.equals("/gpt")) {
            currentMode = DialogMode.GPT;
            sendPhotoMessage("gpt");
            String text = loadMessage("gpt");
            sendTextMessage(text);
            return;
        }

        if (currentMode == DialogMode.GPT && !isMessageCommand()) {
            String promt = loadPrompt("gpt");
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ ChatGPT —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º
            Message msg = sendTextMessage("–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ - ChatGPT –¥—É–º–∞–µ—Ç \uD83E\uDDE0 ... ");

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ ChatGPT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–Ω–æ–≥–æ prompt –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            String answer = chatGPT.sendMessage(promt, message);

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–º –æ—Ç ChatGPT
            updateTextMessage(msg, answer);
            return;
        }

        //DATE
        if (message.equals("/date")) {
            currentMode = DialogMode.DATE;
            sendPhotoMessage("date");
            String text = loadMessage("date");
            sendTextButtonsMessage(text,
                    "–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ \uD83D\uDD25", "date_grande",
                    "–ú–∞—Ä–≥–æ –†–æ–±–±–∏ üî•üî•", "date_robby",
                    "–ó–µ–Ω–¥–µ—è     \uD83D\uDD25\uD83D\uDD25\uD83D\uDD25", "date_zendaya",
                    "–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥ \uD83D\uDE0E", "date_gosling",
                    "–¢–æ–º –•–∞—Ä–¥–∏   \uD83D\uDE0E\uD83D\uDE0E", "date_hardy");
            return;
        }

        if (currentMode == DialogMode.DATE && !isMessageCommand()) {
            String query = getCallbackQueryButtonKey();
            if (query.startsWith("date_")) {
                sendPhotoMessage(query);
                sendTextMessage("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!\n–¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥–µ–≤—É—à–∫—É –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ‚ù§Ô∏è –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π!");

                String promt = loadPrompt(query);
                chatGPT.setPrompt(promt);
                return;
            }

            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ ChatGPT —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º
            Message msg = sendTextMessage("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –¥–µ–≤—É—à–∫–∞ –Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç ... ");

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ ChatGPT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–Ω–æ–≥–æ prompt –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            String answer = chatGPT.addMessage(message);

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–º –æ—Ç ChatGPT
            updateTextMessage(msg, answer);
            return;
        }


        // MESSAGE
        if (message.equals("/message")) {
            currentMode = DialogMode.MESSAGE;
            sendPhotoMessage("message");
            String text = loadMessage("message");
            sendTextButtonsMessage(text, "–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", "message_next",
                    "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ", "message_date");
            return;
        }

        if (currentMode == DialogMode.MESSAGE && !isMessageCommand()) {
            String query = getCallbackQueryButtonKey();
            if (query.startsWith("message_")) {
                sendPhotoMessage(query);
                String promt = loadPrompt(query);
                String userChatHistory = String.join("\n\n", list);

                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ ChatGPT —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º
                Message msg = sendTextMessage("–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ - ChatGPT –¥—É–º–∞–µ—Ç \uD83E\uDDE0 ... ");

                // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ ChatGPT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–Ω–æ–≥–æ prompt –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                String answer = chatGPT.sendMessage(promt, userChatHistory);

                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–º –æ—Ç ChatGPT
                updateTextMessage(msg, answer);
                return;
            }

            list.add(message);


            return;
        }


        // PROFILE
        if (message.equals("/profile")) {
            currentMode = DialogMode.PROFILE;
            sendPhotoMessage("profile");

            me = new UserInfo();
            questionCount = 1;
            sendTextMessage("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?");
            return;
        }

        if (currentMode == DialogMode.PROFILE && !isMessageCommand()) {

            switch (questionCount) {
                case 1:
                    me.name = message;

                    questionCount = 2;
                    sendTextMessage("–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞");
                    return;
                case 2:
                    me.city = message;

                    questionCount = 3;
                    sendTextMessage("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?");
                    return;
                case 3:
                    me.age = message;

                    questionCount = 4;
                    sendTextMessage("–ö–µ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?");
                    return;
                case 4:
                    me.occupation = message;

                    questionCount = 5;
                    sendTextMessage("–£ –≤–∞—Å –µ—Å—Ç—å —Ö–æ–±–±–∏?");
                    return;
                case 5:
                    me.hobby = message;

                    String aboutMySelf = me.toString();
                    String promt = loadPrompt("profile");

                    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ ChatGPT —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º
                    Message msg = sendTextMessage("–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ - ChatGPT –¥—É–º–∞–µ—Ç \uD83E\uDDE0... ");

                    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ ChatGPT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–Ω–æ–≥–æ prompt –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    String answer = chatGPT.sendMessage(promt, aboutMySelf);

                    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–º –æ—Ç ChatGPT
                    updateTextMessage(msg, answer);
                    return;
            }


            return;
        }

        //OPENER
        if (message.equals("/opener")) {
            currentMode = DialogMode.OPENER;
            sendPhotoMessage("opener");

            she = new UserInfo();
            questionCount = 1;
            sendTextMessage("–ò–º—è –¥–µ–≤—É—à–∫–∏?");
            return;
        }

        if (currentMode == DialogMode.OPENER && !isMessageCommand()) {
            switch (questionCount) {
                case 1:
                    she.name = message;

                    questionCount = 2;
                    sendTextMessage("–ò–∑ –∫–∞–∫–æ–≥–æ –æ–Ω–∞ –≥–æ—Ä–æ–¥–∞");
                    return;
                case 2:
                    she.city = message;

                    questionCount = 3;
                    sendTextMessage("–°–∫–æ–ª—å–∫–æ –µ–π –ª–µ—Ç?");
                    return;
                case 3:
                    she.age = message;

                    questionCount = 4;
                    sendTextMessage("–ö–µ–º –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç?");
                    return;
                case 4:
                    she.occupation = message;

                    questionCount = 5;
                    sendTextMessage("–£ –Ω–µ–µ –µ—Å—Ç—å —Ö–æ–±–±–∏?");
                    return;
                case 5:
                    she.hobby = message;

                    String aboutFriend = she.toString();
                    String promt = loadPrompt("opener");

                    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ ChatGPT —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º
                    Message msg = sendTextMessage("–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ - ChatGPT –¥—É–º–∞–µ—Ç \uD83E\uDDE0... ");

                    System.out.println(she.toString());
                    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ ChatGPT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞–Ω–Ω–æ–≥–æ prompt –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    String answer = chatGPT.sendMessage(promt, aboutFriend);

                    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–º –æ—Ç ChatGPT
                    updateTextMessage(msg, answer);
                    return;
            }
            return;
        }

        sendTextMessage("*–ü—Ä–∏–≤–µ—Ç!*");
        sendTextMessage("–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ " + message);

        sendTextButtonsMessage("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã",
                "–°—Ç–∞—Ä—Ç", "start",
                "–°—Ç–æ–ø", "stop");

    }

    public static void main(String[] args) throws TelegramApiException {
        TelegramBotsApi telegramBotsApi = new TelegramBotsApi(DefaultBotSession.class);
        telegramBotsApi.registerBot(new TinderBoltApp());
    }
}
